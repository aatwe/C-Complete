 Use auto with functions
if concept violated -> throw compiler error


std::integral auto add (std::integral auto a, std:: integral auto b){
	return a + b;
}


How to enfore concepts on variables we declare? not lot of use
						why? if assign function to var, we know what is output
std::integral auto x = add(10,20);	//variable enforceed to be integral type
std::cout<< x ;


How to assign literal to variable? auto
		pointless a little? if we know what var we assigning ,why protection needed
std::floating_point auto y = 7.7;