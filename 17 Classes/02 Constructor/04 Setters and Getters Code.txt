main.cpp
Objective: change member variables from outside in main function using setter

#include<iostream>
const double PI {3.14159};

class Cylinder {
  public: 

	Cylinder() = default:
	Cylinder(double rad_param, double height_param){
		base_radius  = rad_param;
		height = height_param; 
}
double volume() {
	return PI*base_radius*base_radius*height;
}
//Getters
 double get_base_radius() {
	return base_radius;
}
double get_height(){
	return height;
}
//Setters 
void set_base_radius(double rad_param){
   base_radius = rad_param;
}

void set_height(double height_param) {
           	height = height_param;
}

private :
//Member variables
	double base_radius{1};
	double height{1};
}; 


int main(){
//How to use setters?
	Cylinder cylinder1(10,10);

	std::cout<<cylinder1.volume(); 	//3141.59	
	
	cylinder1.set_base_radius(100);
	cylinder1.set_height(10);

	std::cout<<cylinder1.volume(); 	//314159		//We modified member variables and hence volume function(using getters and setters)
	std::cout<<cylinder1.base_radius	/Access private member variable using normal dot notation 

	return 0;
	
}