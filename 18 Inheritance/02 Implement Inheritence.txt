Basically new classes will steal features from existing classes

Fundamental Class (Top) : defines basic features of Person

Derived Class(Bottom)    : based on Person

 Engineer inherits from Person class

Ex.
Objective: 
Person class: last_name and first_name
Player  class: Person class features + m_game

A) Setup Fundamental Class
class Person
{  //stream output operator
   friend std::ostream& operator<<(std::ostream& out, const Person& person);

public:
	Person();
	Person(std::string first_name_param, std::string last_name_param);
	~Person(); 
private:
	std::string first_name {"Mysterious"}
}
B) Build on Top of this Class
class Player : public Person
{
	friend std::ostream& operator<<(std::ostream& out, const Player& player);
 public :
	Player() = default;
	Player(std:string game_param:);
	~Player();

 private:
	std::string m_game{"None"};
}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
What Happens we derive player class from person class
1) All information from Person(member variables) are accessible in Player
2) Can build in player class