Where are dynamic array stored ? Arrays stored on heap
	contains junk values initially
	Where are normal array stored ? Arrays stored on stack

How to allocate Dynamic array? new operator: new array_name[array_size];
 
	size_t size{10};
	double *p_salary {new double[size]};'		//init to junk
	if using braced init i,e int [size]{}		//init to 0
	double *p_score { new(std::throw) double[size]{1,2,3,4,5}};	//remaining values? 0

	How allocated memory? new operator
		use std::throw to avoid exceptions

How are dynamic array different than normal?
dont work with std::size 
dont work with range based for loop

	Why? array decays into a pointer and loses info needed for std::size & range based for loop
How to loop? normal loop
How to deduce size then? other techniques

How to loop and print values in dynamic array?

double *p_scores {new double[size] {1,2,3,4,5,}};
if(p_scores) {
for(size_t i =0; i< size; ++i){
	std::cout<<p_scores[i];
or
	std::cout<<*(p_scores + i);
}
}


How to release dynamic array memory?

delete[] p_scores;
p_scores = nullptr;
